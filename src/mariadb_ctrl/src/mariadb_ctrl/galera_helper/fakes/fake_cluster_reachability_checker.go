// This file was generated by counterfeiter
package fakes

import (
	"mariadb_ctrl/galera_helper"

	"sync"
)

type FakeClusterReachabilityChecker struct {
	AnyNodesReachableStub        func() bool
	anyNodesReachableMutex       sync.RWMutex
	anyNodesReachableArgsForCall []struct{}
	anyNodesReachableReturns struct {
		result1 bool
	}
}

func (fake *FakeClusterReachabilityChecker) AnyNodesReachable() bool {
	fake.anyNodesReachableMutex.Lock()
	defer fake.anyNodesReachableMutex.Unlock()
	fake.anyNodesReachableArgsForCall = append(fake.anyNodesReachableArgsForCall, struct{}{})
	if fake.AnyNodesReachableStub != nil {
		return fake.AnyNodesReachableStub()
	} else {
		return fake.anyNodesReachableReturns.result1
	}
}

func (fake *FakeClusterReachabilityChecker) AnyNodesReachableCallCount() int {
	fake.anyNodesReachableMutex.RLock()
	defer fake.anyNodesReachableMutex.RUnlock()
	return len(fake.anyNodesReachableArgsForCall)
}

func (fake *FakeClusterReachabilityChecker) AnyNodesReachableReturns(result1 bool) {
	fake.AnyNodesReachableStub = nil
	fake.anyNodesReachableReturns = struct {
		result1 bool
	}{result1}
}

var _ galera_helper.ClusterReachabilityChecker = new(FakeClusterReachabilityChecker)
