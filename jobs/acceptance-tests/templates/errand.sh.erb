#!/bin/bash
set -e -x

cd /var/vcap/packages/acceptance-tests/src/github.com/cloudfoundry-incubator/cf-mysql-acceptance-tests

skips=<%= p("skip_regex") ? %Q[-skip="#{p("skip_regex")}"] : "" %>

cat > integration_config.json <<EOF
{
  "api":           "<%= p('cf.api_url') %>",
  "apps_domain":   "<%= p('cf.apps_domain') %>",
  "admin_user":    "<%= p('cf.admin_username') %>",
  "broker_host":   "<%= p('broker.host') %>",
  "service_name":  "<%= p('service.name') %>",
  "test_password": "<%= p('smoke_test_password') %>",
  <% if p('org_name') %>
  "org_name": "<%= p('org_name') %>",
  <% end %>
  "plans": [
  <% plans = p('service.plans')
  plans.each do |plan| %>
    {
      "plan_name": "<%= plan['name'] %>",
      "max_storage_mb": <%= plan['max_storage_mb'] %>,
      "max_user_connections": <%= plan['max_user_connections'] || p('service.max_user_connections_default')%>
    <% if plan != plans.last %>
    },
    <% else %>
    }
    <% end %>
  <% end %>
  ],
  "skip_ssl_validation": <%= p('cf.skip_ssl_validation') %>,
  "proxy": {
    "dashboard_urls": [
    <% p('proxy.proxy_count').times do |index| %>
      <% proxy_url = "\"https://proxy-#{index}.#{p('proxy.external_host')}\"" %>
      <% proxy_url += "," unless index == p('proxy.proxy_count') - 1 %>
      <%= proxy_url %>
    <% end %>
    ],
    "api_username": "<%= p('proxy.api_username') %>",
    "api_password": "<%= p('proxy.api_password') %>",
    "api_force_https": <%= p('proxy.api_force_https') %>,
    "skip_ssl_validation": <%= p('proxy.skip_ssl_validation') %>
  },
  "timeout_scale": <%= p('timeout_scale') %>,
EOF

<% if p('standalone_tests_only') %>
cat >> integration_config.json <<EOF
  "standalone": {
    "host":  "<%= p('standalone.host') %>",
    "port": <%= p('standalone.port') %>,
    "username": "<%= p('standalone.username') %>",
    "password": "<%= p('standalone.password') %>"
  },
EOF
<% end %>

# don't expose passwords
set +x

cat >> integration_config.json <<EOF
  "admin_password":   "<%= p('cf.admin_password') %>"
}
EOF

# set -x

export GOPATH=/var/vcap/packages/acceptance-tests
export GOROOT=/var/vcap/packages/golang
export PATH=/var/vcap/packages/cli/bin:$GOPATH/bin:$GOROOT/bin:$PWD/bin:$PATH

export CONFIG=$PWD/integration_config.json


<% if p('standalone_tests_only') %>
  bin/test-standalone --noColor $skips
<% elsif p('smoke_tests_only') %>
  bin/test-smoke --noColor $skips
<% else %>
  bin/test-acceptance --noColor $skips
<% end %>
