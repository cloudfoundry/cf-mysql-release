#!/bin/bash -e

set -eo pipefail

JOB_DIR=/var/vcap/jobs/cf-mysql-broker
PACKAGE_DIR=/var/vcap/packages/cf-mysql-broker
RUN_DIR=/var/vcap/sys/run/cf-mysql-broker
LOG_DIR=/var/vcap/sys/log/cf-mysql-broker
PIDFILE=$RUN_DIR/unicorn.pid

export PATH=/var/vcap/packages/ruby/bin:$PATH
export BUNDLE_GEMFILE=/var/vcap/packages/cf-mysql-broker/Gemfile
export RAILS_ENV=production
export SETTINGS_PATH=$JOB_DIR/config/settings.yml
# rake needs HOME to be set to run tasks
export HOME=/home/vcap
export JOB_INDEX=<%= index %>

source /var/vcap/packages/cf-mysql-common/pid_utils.sh
source /var/vcap/packages/cf-mysql-common/syslog_utils.sh

tee_output_to_sys_log ${LOG_DIR}

# add mysql to path
if [ ! -f /usr/local/bin/mysql ]; then
  echo "Adding mysql to path"
  ln -s /var/vcap/packages/mariadb/bin/mysql /usr/local/bin
fi

case $1 in

  start)
    mkdir -p $RUN_DIR
    chown -R vcap:vcap $RUN_DIR
    mkdir -p $LOG_DIR
    chown -R vcap:vcap $LOG_DIR

    <% if_p("syslog_aggregator.address", "syslog_aggregator.port", "syslog_aggregator.transport") do %>
    # Start syslog forwarding
    /var/vcap/packages/syslog_aggregator/setup_syslog_forwarder.sh $JOB_DIR/config
    <% end %>

    pushd $PACKAGE_DIR
      # Run the migrations only on the first node
      if [ $JOB_INDEX -eq 0 ]; then
          # Needed because rake db:migrate attempts to rewrite schema.rb file
          # which is currently owned by root
          #
          # Needs to live here instead of above because chown -R does not follow symlinks
          chown -R vcap:vcap .

          # Create DB and run migrations
          set +e
          su - vcap -p -c -o pipefail "PATH=$PATH bundle exec rake db:create 2>&1 \
              | tee -a $LOG_DIR/db_migrate.combined.log \
              | logger -p local1.error -t mysql-broker-dbcreate"

          su - vcap -p -c -o pipefail "PATH=$PATH bundle exec rake db:migrate 2>&1 \
              | tee -a $LOG_DIR/db_migrate.combined.log \
              | logger -p local1.error -t mysql-broker-dbmigrate"

          EXIT_STATUS=$?
          set -e

          if [ $EXIT_STATUS != 0 ]; then
            echo "Migrations failed at `date`" \
                | tee -a $LOG_DIR/db_migrate.combined.log \
                | logger -p local1.error -t mysql-broker-dbmigrate
            exit 1
          fi

          # Sync size of existing service instances to match plans in manifest
          set +e
          su - vcap -p -c -o pipefail "PATH=$PATH bundle exec rake broker:sync_plans_in_db 2>&1 \
              | tee -a $LOG_DIR/cf-mysql-broker.log \
              | logger -p local1.error -t mysql-broker-plans"

          EXIT_STATUS=$?
          set -e

          if [ $EXIT_STATUS != 0 ]; then
            echo "Failed to sync broker plans at `date`" \
                | tee -a $LOG_DIR/cf-mysql-broker.log \
                | logger -p local1.error -t mysql-broker-plans
            exit 1
          fi
      fi

      su - vcap -p -c -o pipefail "PATH=$PATH bundle exec rake table_locks:update_table_lock_permissions 2>&1 \
        | tee -a $LOG_DIR/cf-mysql-broker.log \
        | logger -p local1.error -t mysql-broker-update-table-lock-permissions"

    popd

    su - vcap -p -c -o pipefail "PATH=$PATH bundle exec unicorn -c $JOB_DIR/config/unicorn.conf.rb 2>&1 \
        | tee -a $LOG_DIR/cf-mysql-broker.log \
        | logger -p local1.error -t mysql-broker &"
    ;;

  stop)
    kill_and_wait "${PIDFILE}"
    ;;

  *)
    echo "Usage: cf-mysql-broker_ctl {start|stop}"
    ;;

esac
